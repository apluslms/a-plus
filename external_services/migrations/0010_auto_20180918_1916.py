# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2019-01-03 12:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def validate_no_domain(value):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('external_services', '0009_auto_20180822_1629'),
    ]

    operations = [
        migrations.AddField(
            model_name='linkservice',
            name='destination_region',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Destination is hosted internally. Link to internal privacy notice.'), (1, 'Destination is hosted in the same organization. Link to a privacy notice.'), (3, 'Destination is hosted in European Economic Area. Link to a privacy notice.'), (5, 'Destination is hosted out side of European Economic Area, but certified under EU-US Privacy Shield. Link to an extended privacy notice.'), (6, 'Destination is hosted out side of European Economic Area. Link to an extended privacy notice.')], default=6, help_text='The geographical area of the destination. Will display correct user notice.'),
        ),
        migrations.AddField(
            model_name='linkservice',
            name='privacy_notice_url',
            field=models.CharField(blank=True, help_text='A link to the service privacy notice. This is mandatory for services outside organization!', max_length=512),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='menu_url',
            field=models.CharField(blank=True, help_text='URL that is a) relative to the service URL or b) this course if no service is selected.\nCase a: url starting with / overwrites path in service url and extends it otherwise.\ncase b: url starting with / is absolute within this service and relative to the course path otherwise.\nNote that URL entered here can not include scheme or domain.', max_length=256, null=True, validators=[validate_no_domain]),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='service',
            field=models.ForeignKey(blank=True, help_text='An external service to link to. These are configured by administrators.', null=True, on_delete=django.db.models.deletion.CASCADE, to='external_services.LinkService'),
        ),
    ]
